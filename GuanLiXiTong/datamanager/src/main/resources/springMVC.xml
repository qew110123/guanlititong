<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/mvc 
	    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	    http://www.springframework.org/schema/task  
	    http://www.springframework.org/schema/task/spring-task-3.2.xsd">
	<description>Spring-web MVC配置</description>
	
	<!-- 启用Spring MVC注解驱动-->
	<mvc:annotation-driven />
    <!-- task任务扫描注解 -->  
    <task:annotation-driven/>      
	<!-- 对所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="yineng.datacenter.manager">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	
	<!-- 当请求应用程序首页时，将执行/home/enter请求-->
	<mvc:view-controller path="/" view-name="forward:/user/login" />
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">		
		<!-- 支持以扩展名的形式来指定MIMEType，默认也为true-->
		<property name="ignoreAcceptHeader" value="true" />
		<property name="favorPathExtension" value="true" />
		<!-- 媒体类型的映射 -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
			</map>
		</property>
		<!-- 当请求url中不指定扩展名时，默认的媒体类型 -->
		<property name="defaultContentType" value="text/html" />
		<!-- 视图解析器-->
		<property name="viewResolvers">
             <list>
             	<!-- text/html -->
	             <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
					<property name="cache" value="true" />
					<!-- 模板后缀，指定html页面为模板 -->
					<property name="suffix" value=".html" />
					<!-- 使用这个模板类来解析视图 -->
					<property name="exposeSpringMacroHelpers" value="true" />
					<!-- 允许访问请求属性，默认为false -->
					<property name="exposeRequestAttributes" value="true" />
					<!-- 允许访问会话属性，默认为false -->
					<property name="exposeSessionAttributes" value="true" />
					<!-- 允许遇到重复的值，会将旧值覆盖 -->
					<property name="allowSessionOverride" value="true" />
					<!-- 页面上下文，类似于request.contextPath -->
					<property name="requestContextAttribute" value="rc" />
					<!-- 模板输出内容编码，此处应与defaultEncoding保持一致 -->
					<property name="contentType" value="text/html;charset=UTF-8" />
				</bean>
            </list>
        </property>
		<!-- 指定视图来渲染相应的媒体类型 -->
		<property name="defaultViews">
			<list>
				<!-- application/json -->
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
			</list>
		</property>
	</bean>
	<!-- freemarker视图配置 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!-- 模板文件所在目录 -->
		<property name="templateLoaderPath" value="/pages/" />
		<!-- 指定FreeMarker模板文件的编码格式 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- FreeMarker属性配置 -->
		<property name="freemarkerSettings">
			<props>
				<!-- 每隔5小时检查模板是否更新，单位为秒 如果不经常更新模板可将更新的延迟时间设定长一点 -->
				<prop key="template_update_delay">0</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
	        <map>
	            <entry key="webroot" value="${webRoot}" />
	            <entry key="listToStr" value-ref="listToStr" />
	        </map>
	    </property>
	</bean>
	
	<!-- 自定义freemarker方法的配置 -->
    <bean id="listToStr" class="yineng.datacenter.manager.freemarker.ListToStr" />
    
    <!-- 全局异常配置-->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">    
         <property name="exceptionMappings">    
             <props>    
                 <prop key="java.lang.Exception">errors/error</prop>      
             </props>    
         </property>    
         <property name="statusCodes">    
             <props>    
                 <prop key="/error/500">500</prop>    
                 <prop key="/error/404">404</prop>    
             </props>    
         </property>    
         <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->    
         <property name="warnLogCategory" value="WARN"></property>    
         <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->    
         <property name="defaultErrorView" value="/error"></property>    
         <!-- 默认HTTP状态码 -->    
         <property name="defaultStatusCode" value="500"></property>    
     </bean>
         
    <!-- 拦截器 -->
    <mvc:interceptors>
    	<!-- 日志拦截器 -->
    	<mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean id="loggerInterceptor" class="yineng.datacenter.manager.interceptor.LoggerInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>